# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# Trigger on all branches
#trigger:
#- master

jobs:
- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 6'
    inputs:
      packageType: 'sdk'
      version: '6.x'
  - task: DotNetCoreCLI@2
    displayName: 'Install .NET workload Android'
    inputs:
      command: 'custom'
      custom: 'workload'
      arguments: 'install android'
  - task: JavaToolInstaller@0
    displayName: 'Install Java SDK 11'
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - task: DotNetCoreCLI@2
    displayName: 'Restore solution'
    inputs:
      command: 'restore'
      projects: 'src\PDFtoImage.sln'
      feedsToUse: 'select'
  - task: VSBuild@1
    displayName: 'Build solution'
    inputs:
      solution: 'src\PDFtoImage.sln'
      msbuildArgs: '/p:VersionSuffix=ci'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish project assemblies'
    inputs:
      targetPath: '$(Build.SourcesDirectory)\src\PDFtoImage\bin\$(buildConfiguration)'
      artifact: 'Assemblies ($(buildConfiguration))'
      publishLocation: 'pipeline'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish test assemblies'
    inputs:
      targetPath: '$(Build.SourcesDirectory)\src\Tests\bin\$(buildConfiguration)'
      artifact: 'Tests'
      publishLocation: 'pipeline'
  - task: VSBuild@1
    displayName: 'Create NuGet package'
    inputs:
      solution: 'src\PDFtoImage\PDFtoImage.csproj'
      msbuildArgs: '/t:pack /p:VersionSuffix=ci /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  - task: PublishPipelineArtifact@1
    displayName: 'Publish NuGet package'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'NuGet package ($(buildConfiguration))'
      publishLocation: 'pipeline'
  
- job: Test
  displayName: 'Test'
  dependsOn: Build
  strategy:
    matrix:
      Windows:
        imageName: 'windows-latest'
      Linux:
        imageName: 'ubuntu-latest'
      macOS:
        imageName: 'macOS-latest'
  pool:
    vmImage: $(imageName)
  steps:
  - checkout: none
    displayName: 'Skip checkout'
  - task: UseDotNet@2
    displayName: 'Install .NET 6'
    inputs:
      packageType: 'sdk'
      version: '6.x'
  - task: DownloadPipelineArtifact@2
    displayName: 'Download test assemblies'
    inputs:
      buildType: 'current'
      artifactName: 'Tests'
      targetPath: '$(Pipeline.Workspace)'
  - task: VSTest@2
    displayName: '.NET Framework 4.6.2'
    condition: eq(variables['agent.os'], 'Windows_NT')
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '$(Pipeline.Workspace)\**\net462\PDFtoImage.Tests.dll'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runTestsInIsolation: true
      codeCoverageEnabled: true
      testRunTitle: '.NET Framework 4.6.2 ($(agent.os))'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
  - task: VSTest@2
    displayName: '.NET Framework 4.8.1'
    condition: eq(variables['agent.os'], 'Windows_NT')
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: '$(Pipeline.Workspace)\**\net481\PDFtoImage.Tests.dll'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runTestsInIsolation: true
      codeCoverageEnabled: true
      testRunTitle: '.NET Framework 4.8.1 ($(agent.os))'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: '.NET 6.0'
    condition: succeededOrFailed()
    inputs:
      command: 'test'
      arguments: '$(Pipeline.Workspace)\**\net6.0\PDFtoImage.Tests.dll'
      testRunTitle: '.NET 6.0 ($(agent.os))'