@page "/conversion"
@using Microsoft.Extensions.Logging;
@using PDFtoImage
@using System.IO;
@using System.Runtime.InteropServices;
@using System.Reflection;
@inject ILogger<Conversion> Logger
@inject IJSRuntime JS

<PageTitle>Conversion</PageTitle>

<InputFile OnChange="@LoadFiles" single />

@if (isLoading)
{
	<p>Uploading...</p>
}

@code {
	private int currentCount = 0;
	private bool isLoading;
	const long maxAllowedSize = 100 * 1000 * 1000;

	private void IncrementCount()
	{
		currentCount++;
	}

	private async Task LoadFiles(InputFileChangeEventArgs e)
	{
		try
		{
			isLoading = true;

			using var fs = new MemoryStream();
			await e.File.OpenReadStream(maxAllowedSize).CopyToAsync(fs);
			fs.Position = 0;
			var result = PDFtoImage.Conversion.GetPageCount(fs);
		}
		catch (Exception ex)
		{
			Logger.LogError("File: {Name} Error: {Error}", e.File.Name, ex.Message);
		}
		finally
		{
			isLoading = false;
		}
	}
}
